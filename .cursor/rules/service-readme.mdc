---
globs: **/README.md
alwaysApply: false
---
# Service README Standards

When creating or editing README files for services in this docker-infra project, follow these requirements to ensure consistent, concise, and easily readable documentation:

## Required File Structure

Each service directory must contain:

```md
service-name/
├── compose.yml    # Docker Compose configuration
└── README.md      # Service documentation
```

## Mandatory README Template

Use this exact structure with all sections in order:

```markdown
# Service Name

[Single line description of what the service is and its primary purpose. Keep it punchy and clear.]

## What it does

- **Core Feature** - Primary functionality in concise terms
- **Secondary Feature** - Additional key capability
- **Feature Group** - Related capabilities grouped together
- **Extension Feature** - Extensibility and customization options

## Quick Start

1. Run with Docker Compose: `docker compose up -d`
2. Access [interface] at `http://localhost:[PORT]`
3. [Essential setup step]
4. [Critical configuration step]

**Note:** [Single line about key requirements or dependencies]

## Configuration

### Environment Variables

| Variable | Default | Description |
|----------|---------|-------------|
| `VAR_NAME` | `default_value` | Concise description |
| `ANOTHER_VAR` | `another_default` | What it controls |

### Usage Examples

\```bash
# Basic usage
docker compose up -d

# Custom configuration
VAR_NAME=custom_value docker compose up -d
\```

**Note:** [Brief configuration guidance in one line]

## Limitations

- [Specific limitation 1]
- [Specific limitation 2]

## Links & Resources

- **Official Website:** [link]
- **Official GitHub:** [link]
- **Documentation:** [link]
- **Docker Hub:** [link]

```

## Critical Requirements

### Commands

- ✅ ALWAYS use `docker compose` (modern syntax)
- ❌ NEVER use `docker-compose` (legacy syntax)

### Environment Variables

- ✅ MUST document ALL variables from [compose.yml](mdc:compose.yml)
- ✅ MUST use table format with Variable|Default|Description columns
- ✅ MUST show inline command examples for common configurations
- ✅ Include practical usage scenarios when helpful
- ❌ NO `.env` file examples (inline only)

### Documentation Quality

- ✅ Prioritize conciseness and readability
- ✅ Organize content by relevance (most important first)
- ✅ Eliminate redundancy and repetitive content
- ✅ Group related features logically
- ✅ Include troubleshooting tips when essential

### Content Standards

- **Title:** Exact service name matching directory
- **Description:** Single punchy line focusing on core purpose, no marketing language
- **Features:** 4-6 focused bullets that group related functionality logically
- **Quick Start:** 4 essential steps maximum for immediate setup
- **Port values:** Must match defaults in [compose.yml](mdc:compose.yml)
- **Conciseness:** Prefer clear, scannable content over verbose explanations
- **Length:** Aim for 40-80 lines for optimal readability

### Links

- ✅ Official sources only (GitHub, Docker Hub, official docs)
- ❌ NO unofficial tutorials or blog posts

## Content Organization Principles

1. **Relevance Order:** Most important information first (what → how → details)
2. **Logical Grouping:** Related features and concepts together
3. **Action-Oriented:** Get users to success quickly
4. **Eliminate Redundancy:** Don't repeat the same information in different sections
5. **Scannable:** Use bullet points, short sentences, and clear structure

## Integration Requirements

- Must work with `make service-name` automation
- Port references must match [compose.yml](mdc:compose.yml) defaults
- Environment variable names must exactly match [compose.yml](mdc:compose.yml)

## Reference Implementation

See [open-webui/README.md](mdc:open-webui/README.md) as the standard reference.
